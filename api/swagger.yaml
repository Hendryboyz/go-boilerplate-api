definitions:
  todo.CreateTodoRequest:
    properties:
      description:
        example: say hello to everyone
        format: string
        type: string
      endDate:
        format: dateTime
        type: string
      startDate:
        format: dateTime
        type: string
    required:
    - description
    - endDate
    - startDate
    type: object
  todo.UpdateTodoRequest:
    properties:
      description:
        example: say hello to everyone
        format: string
        type: string
      endDate:
        format: dateTime
        type: string
      startDate:
        format: dateTime
        type: string
    type: object
info:
  contact: {}
paths:
  /todos:
    get:
      description: List All Todo Items
      parameters:
      - description: the user id to filter
        example: henry.chou
        in: query
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: List All Todo Items
      tags:
      - todos
    post:
      consumes:
      - application/json
      description: CreateItem Todo Item
      parameters:
      - description: CreateItem Todo Item
        in: body
        name: todoItem
        required: true
        schema:
          $ref: '#/definitions/todo.CreateTodoRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
      summary: CreateItem Todo Item
      tags:
      - todos
  /todos/{itemId}:
    delete:
      description: DeleteItem Todo Item
      parameters:
      - description: the item id to be deleted
        example: 7d105cc8-a709-4a28-ae96-f0270bc5ad20
        in: path
        name: itemId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
      summary: DeleteItem Todo Item
      tags:
      - todos
    get:
      consumes:
      - application/json
      description: do ping
      parameters:
      - description: get item by id
        example: 7ae9c676-fc23-47a2-abc1-591ad2859b67
        in: path
        name: itemId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get Todo Item By Id
      tags:
      - todos
    patch:
      consumes:
      - application/json
      description: UpdateItem Todo Item
      parameters:
      - description: the item id to be updated
        example: 7d105cc8-a709-4a28-ae96-f0270bc5ad20
        in: path
        name: itemId
        required: true
        type: string
      - description: UpdateItem Todo Item
        in: body
        name: todoItem
        required: true
        schema:
          $ref: '#/definitions/todo.UpdateTodoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: UpdateItem Todo Item
      tags:
      - todos
swagger: "2.0"
